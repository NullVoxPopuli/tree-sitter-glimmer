{
  "name": "glimmer",
  "rules": {
    "template": {
      "type": "REPEAT",
      "content": {
        "type": "CHOICE",
        "members": [
          {
            "type": "SYMBOL",
            "name": "mustache_statement"
          }
        ]
      }
    },
    "mustache_statement_start": {
      "type": "STRING",
      "value": "{{"
    },
    "mustache_statement_end": {
      "type": "STRING",
      "value": "}}"
    },
    "path_expression": {
      "type": "PATTERN",
      "value": "([a-zA-Z]|-|\\.)+"
    },
    "_value": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "string_literal"
        },
        {
          "type": "SYMBOL",
          "name": "number_literal"
        },
        {
          "type": "SYMBOL",
          "name": "boolean_literal"
        },
        {
          "type": "SYMBOL",
          "name": "path_expression"
        }
      ]
    },
    "mustache_statement": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "mustache_statement_start"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SYMBOL",
            "name": "_value"
          }
        },
        {
          "type": "SYMBOL",
          "name": "mustache_statement_end"
        }
      ]
    },
    "string_literal": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "_single_quote_string_literal"
        },
        {
          "type": "SYMBOL",
          "name": "_double_quote_string_literal"
        }
      ]
    },
    "_single_quote_string_literal": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "'"
        },
        {
          "type": "PATTERN",
          "value": "[^'\\\\]+"
        },
        {
          "type": "STRING",
          "value": "'"
        }
      ]
    },
    "_double_quote_string_literal": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "\""
        },
        {
          "type": "PATTERN",
          "value": "[^\"\\\\]+"
        },
        {
          "type": "STRING",
          "value": "\""
        }
      ]
    },
    "number_literal": {
      "type": "PATTERN",
      "value": "[\\da-fA-F](_?[\\da-fA-F])*"
    },
    "boolean_literal": {
      "type": "CHOICE",
      "members": [
        {
          "type": "STRING",
          "value": "true"
        },
        {
          "type": "STRING",
          "value": "false"
        }
      ]
    }
  },
  "extras": [
    {
      "type": "PATTERN",
      "value": "\\s"
    }
  ],
  "conflicts": [],
  "externals": [],
  "inline": [],
  "supertypes": []
}

